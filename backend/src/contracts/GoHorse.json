{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "initialSupply",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "metadataUrl",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "MAX_SUPPLY",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "allowance",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "approve",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "decimals",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getMetadataUrl",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "mint",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "owner",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "setMinter",
            "inputs": [
                {
                    "name": "minter",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "isAllowed",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "transfer",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "InitialSupplyMinted",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MinterUpdated",
            "inputs": [
                {
                    "name": "minter",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "status",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "ERC20InsufficientAllowance",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "allowance",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "needed",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InsufficientBalance",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "needed",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidApprover",
            "inputs": [
                {
                    "name": "approver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidReceiver",
            "inputs": [
                {
                    "name": "receiver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidSender",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidSpender",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "InvalidInitialSupply",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MaxSupplyExceeded",
            "inputs": []
        },
        {
            "type": "error",
            "name": "OnlyOwner",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x608060405234801561000f575f5ffd5b50604051611e61380380611e618339818101604052810190610031919061067e565b6040518060400160405280600881526020017f476f20486f7273650000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f474f484f0000000000000000000000000000000000000000000000000000000081525081600390816100ac91906108df565b5080600490816100bc91906108df565b5050503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806006908161010e91906108df565b50600160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506101a860055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400008461019d91906109db565b6101af60201b60201c565b5050610b04565b670de0b6b3a76400006113886101c591906109db565b8111156101fe576040517fc2c5358f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61020e828261026060201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167f0e9afdea29d93d82aeb661870b5f2ad12b3bd74d8526138188fe81fd920607ea826040516102549190610a2b565b60405180910390a25050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102d0575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102c79190610a83565b60405180910390fd5b6102e15f83836102e560201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610335578060025f8282546103299190610a9c565b92505081905550610403565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103be578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103b593929190610acf565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361044a578060025f8282540392505081905550610494565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104f19190610a2b565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f819050919050565b6105218161050f565b811461052b575f5ffd5b50565b5f8151905061053c81610518565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6105908261054a565b810181811067ffffffffffffffff821117156105af576105ae61055a565b5b80604052505050565b5f6105c16104fe565b90506105cd8282610587565b919050565b5f67ffffffffffffffff8211156105ec576105eb61055a565b5b6105f58261054a565b9050602081019050919050565b8281835e5f83830152505050565b5f61062261061d846105d2565b6105b8565b90508281526020810184848401111561063e5761063d610546565b5b610649848285610602565b509392505050565b5f82601f83011261066557610664610542565b5b8151610675848260208601610610565b91505092915050565b5f5f6040838503121561069457610693610507565b5b5f6106a18582860161052e565b925050602083015167ffffffffffffffff8111156106c2576106c161050b565b5b6106ce85828601610651565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061072657607f821691505b602082108103610739576107386106e2565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261079b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610760565b6107a58683610760565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6107e06107db6107d68461050f565b6107bd565b61050f565b9050919050565b5f819050919050565b6107f9836107c6565b61080d610805826107e7565b84845461076c565b825550505050565b5f5f905090565b610824610815565b61082f8184846107f0565b505050565b5b81811015610852576108475f8261081c565b600181019050610835565b5050565b601f821115610897576108688161073f565b61087184610751565b81016020851015610880578190505b61089461088c85610751565b830182610834565b50505b505050565b5f82821c905092915050565b5f6108b75f198460080261089c565b1980831691505092915050565b5f6108cf83836108a8565b9150826002028217905092915050565b6108e8826106d8565b67ffffffffffffffff8111156109015761090061055a565b5b61090b825461070f565b610916828285610856565b5f60209050601f831160018114610947575f8415610935578287015190505b61093f85826108c4565b8655506109a6565b601f1984166109558661073f565b5f5b8281101561097c57848901518255600182019150602085019450602081019050610957565b868310156109995784890151610995601f8916826108a8565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109e58261050f565b91506109f08361050f565b92508282026109fe8161050f565b91508282048414831517610a1557610a146109ae565b5b5092915050565b610a258161050f565b82525050565b5f602082019050610a3e5f830184610a1c565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a6d82610a44565b9050919050565b610a7d81610a63565b82525050565b5f602082019050610a965f830184610a74565b92915050565b5f610aa68261050f565b9150610ab18361050f565b9250828201905080821115610ac957610ac86109ae565b5b92915050565b5f606082019050610ae25f830186610a74565b610aef6020830185610a1c565b610afc6040830184610a1c565b949350505050565b61135080610b115f395ff3fe608060405234801561000f575f5ffd5b50600436106100e8575f3560e01c806370a082311161008a578063a9059cbb11610064578063a9059cbb1461024c578063b03e75921461027c578063cf456ae71461029a578063dd62ed3e146102b6576100e8565b806370a08231146101e05780638da5cb5b1461021057806395d89b411461022e576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806332cb6b0c146101a657806340c10f19146101c4576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f5ffd5b6100f46102e6565b6040516101019190610eb8565b60405180910390f35b610124600480360381019061011f9190610f69565b610376565b6040516101319190610fc1565b60405180910390f35b610142610398565b60405161014f9190610fe9565b60405180910390f35b610172600480360381019061016d9190611002565b6103a1565b60405161017f9190610fc1565b60405180910390f35b6101906103cf565b60405161019d919061106d565b60405180910390f35b6101ae6103d7565b6040516101bb9190610fe9565b60405180910390f35b6101de60048036038101906101d99190610f69565b6103f0565b005b6101fa60048036038101906101f59190611086565b6104e8565b6040516102079190610fe9565b60405180910390f35b61021861052d565b60405161022591906110c0565b60405180910390f35b610236610555565b6040516102439190610eb8565b60405180910390f35b61026660048036038101906102619190610f69565b6105e5565b6040516102739190610fc1565b60405180910390f35b610284610607565b6040516102919190610eb8565b60405180910390f35b6102b460048036038101906102af9190611103565b610697565b005b6102d060048036038101906102cb9190611141565b6107c3565b6040516102dd9190610fe9565b60405180910390f35b6060600380546102f5906111ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610321906111ac565b801561036c5780601f106103435761010080835404028352916020019161036c565b820191905f5260205f20905b81548152906001019060200180831161034f57829003601f168201915b5050505050905090565b5f5f610380610845565b905061038d81858561084c565b600191505092915050565b5f600254905090565b5f5f6103ab610845565b90506103b885828561085e565b6103c38585856108f1565b60019150509392505050565b5f6012905090565b670de0b6b3a76400006113886103ed9190611209565b81565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610479576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047090611294565b60405180910390fd5b670de0b6b3a764000061138861048f9190611209565b81610498610398565b6104a291906112b2565b11156104da576040517f8a164f6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e482826109e1565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610564906111ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610590906111ac565b80156105db5780601f106105b2576101008083540402835291602001916105db565b820191905f5260205f20905b8154815290600101906020018083116105be57829003601f168201915b5050505050905090565b5f5f6105ef610845565b90506105fc8185856108f1565b600191505092915050565b606060068054610616906111ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610642906111ac565b801561068d5780601f106106645761010080835404028352916020019161068d565b820191905f5260205f20905b81548152906001019060200180831161067057829003601f168201915b5050505050905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071d576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fb21afb9ce9be0a676f8f317ff0ca072fb89a4f8ce2d1b6fe80f8755c14f1cb19826040516107b79190610fc1565b60405180910390a25050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6108598383836001610a60565b505050565b5f61086984846107c3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108eb57818110156108dc578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108d3939291906112e5565b60405180910390fd5b6108ea84848484035f610a60565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610961575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161095891906110c0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109d1575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109c891906110c0565b60405180910390fd5b6109dc838383610c2f565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a51575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a4891906110c0565b60405180910390fd5b610a5c5f8383610c2f565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ad0575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ac791906110c0565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b40575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b3791906110c0565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610c29578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c209190610fe9565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c7f578060025f828254610c7391906112b2565b92505081905550610d4d565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d08578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610cff939291906112e5565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d94578060025f8282540392505081905550610dde565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e3b9190610fe9565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610e8a82610e48565b610e948185610e52565b9350610ea4818560208601610e62565b610ead81610e70565b840191505092915050565b5f6020820190508181035f830152610ed08184610e80565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f0582610edc565b9050919050565b610f1581610efb565b8114610f1f575f5ffd5b50565b5f81359050610f3081610f0c565b92915050565b5f819050919050565b610f4881610f36565b8114610f52575f5ffd5b50565b5f81359050610f6381610f3f565b92915050565b5f5f60408385031215610f7f57610f7e610ed8565b5b5f610f8c85828601610f22565b9250506020610f9d85828601610f55565b9150509250929050565b5f8115159050919050565b610fbb81610fa7565b82525050565b5f602082019050610fd45f830184610fb2565b92915050565b610fe381610f36565b82525050565b5f602082019050610ffc5f830184610fda565b92915050565b5f5f5f6060848603121561101957611018610ed8565b5b5f61102686828701610f22565b935050602061103786828701610f22565b925050604061104886828701610f55565b9150509250925092565b5f60ff82169050919050565b61106781611052565b82525050565b5f6020820190506110805f83018461105e565b92915050565b5f6020828403121561109b5761109a610ed8565b5b5f6110a884828501610f22565b91505092915050565b6110ba81610efb565b82525050565b5f6020820190506110d35f8301846110b1565b92915050565b6110e281610fa7565b81146110ec575f5ffd5b50565b5f813590506110fd816110d9565b92915050565b5f5f6040838503121561111957611118610ed8565b5b5f61112685828601610f22565b9250506020611137858286016110ef565b9150509250929050565b5f5f6040838503121561115757611156610ed8565b5b5f61116485828601610f22565b925050602061117585828601610f22565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806111c357607f821691505b6020821081036111d6576111d561117f565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61121382610f36565b915061121e83610f36565b925082820261122c81610f36565b91508282048414831517611243576112426111dc565b5b5092915050565b7f4e6f7420617574686f72697a656420746f206d696e74000000000000000000005f82015250565b5f61127e601683610e52565b91506112898261124a565b602082019050919050565b5f6020820190508181035f8301526112ab81611272565b9050919050565b5f6112bc82610f36565b91506112c783610f36565b92508282019050808211156112df576112de6111dc565b5b92915050565b5f6060820190506112f85f8301866110b1565b6113056020830185610fda565b6113126040830184610fda565b94935050505056fea2646970667358221220ea0a228ecf4e09d0da3ecf878f9b040bad373ab1195438af0d8b26d74616480d64736f6c634300081c0033",
        "sourceMap": "708:2880:21:-:0;;;1368:291;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1498:10:21::1;1488:7;;:20;;;;;;;;;;;;;;;;;;1534:11;1518:13;:27;;;;;;:::i;:::-;;1577:4;1555:7;:19;1563:10;1555:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1591:61;1610:7;;;;;;;;;;;784:8;1619:13;:32;;;;:::i;:::-;1591:18;;;:61;;:::i;:::-;1368:291:::0;;708:2880;;2450:233;784:8;945:4;:23;;;;:::i;:::-;2529:6;:19;2525:79;;;2571:22;;;;;;;;;;;;;;2525:79;2613:17;2619:2;2623:6;2613:5;;;:17;;:::i;:::-;2665:2;2645:31;;;2669:6;2645:31;;;;;;:::i;:::-;;;;;;;;2450:233;;:::o;7458:208:15:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:22:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:117::-;803:1;800;793:12;817:117;926:1;923;916:12;940:102;981:6;1032:2;1028:7;1023:2;1016:5;1012:14;1008:28;998:38;;940:102;;;:::o;1048:180::-;1096:77;1093:1;1086:88;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1234:281;1317:27;1339:4;1317:27;:::i;:::-;1309:6;1305:40;1447:6;1435:10;1432:22;1411:18;1399:10;1396:34;1393:62;1390:88;;;1458:18;;:::i;:::-;1390:88;1498:10;1494:2;1487:22;1277:238;1234:281;;:::o;1521:129::-;1555:6;1582:20;;:::i;:::-;1572:30;;1611:33;1639:4;1631:6;1611:33;:::i;:::-;1521:129;;;:::o;1656:308::-;1718:4;1808:18;1800:6;1797:30;1794:56;;;1830:18;;:::i;:::-;1794:56;1868:29;1890:6;1868:29;:::i;:::-;1860:37;;1952:4;1946;1942:15;1934:23;;1656:308;;;:::o;1970:139::-;2059:6;2054:3;2049;2043:23;2100:1;2091:6;2086:3;2082:16;2075:27;1970:139;;;:::o;2115:434::-;2204:5;2229:66;2245:49;2287:6;2245:49;:::i;:::-;2229:66;:::i;:::-;2220:75;;2318:6;2311:5;2304:21;2356:4;2349:5;2345:16;2394:3;2385:6;2380:3;2376:16;2373:25;2370:112;;;2401:79;;:::i;:::-;2370:112;2491:52;2536:6;2531:3;2526;2491:52;:::i;:::-;2210:339;2115:434;;;;;:::o;2569:355::-;2636:5;2685:3;2678:4;2670:6;2666:17;2662:27;2652:122;;2693:79;;:::i;:::-;2652:122;2803:6;2797:13;2828:90;2914:3;2906:6;2899:4;2891:6;2887:17;2828:90;:::i;:::-;2819:99;;2642:282;2569:355;;;;:::o;2930:680::-;3019:6;3027;3076:2;3064:9;3055:7;3051:23;3047:32;3044:119;;;3082:79;;:::i;:::-;3044:119;3202:1;3227:64;3283:7;3274:6;3263:9;3259:22;3227:64;:::i;:::-;3217:74;;3173:128;3361:2;3350:9;3346:18;3340:25;3392:18;3384:6;3381:30;3378:117;;;3414:79;;:::i;:::-;3378:117;3519:74;3585:7;3576:6;3565:9;3561:22;3519:74;:::i;:::-;3509:84;;3311:292;2930:680;;;;;:::o;3616:99::-;3668:6;3702:5;3696:12;3686:22;;3616:99;;;:::o;3721:180::-;3769:77;3766:1;3759:88;3866:4;3863:1;3856:15;3890:4;3887:1;3880:15;3907:320;3951:6;3988:1;3982:4;3978:12;3968:22;;4035:1;4029:4;4025:12;4056:18;4046:81;;4112:4;4104:6;4100:17;4090:27;;4046:81;4174:2;4166:6;4163:14;4143:18;4140:38;4137:84;;4193:18;;:::i;:::-;4137:84;3958:269;3907:320;;;:::o;4233:141::-;4282:4;4305:3;4297:11;;4328:3;4325:1;4318:14;4362:4;4359:1;4349:18;4341:26;;4233:141;;;:::o;4380:93::-;4417:6;4464:2;4459;4452:5;4448:14;4444:23;4434:33;;4380:93;;;:::o;4479:107::-;4523:8;4573:5;4567:4;4563:16;4542:37;;4479:107;;;;:::o;4592:393::-;4661:6;4711:1;4699:10;4695:18;4734:97;4764:66;4753:9;4734:97;:::i;:::-;4852:39;4882:8;4871:9;4852:39;:::i;:::-;4840:51;;4924:4;4920:9;4913:5;4909:21;4900:30;;4973:4;4963:8;4959:19;4952:5;4949:30;4939:40;;4668:317;;4592:393;;;;;:::o;4991:60::-;5019:3;5040:5;5033:12;;4991:60;;;:::o;5057:142::-;5107:9;5140:53;5158:34;5167:24;5185:5;5167:24;:::i;:::-;5158:34;:::i;:::-;5140:53;:::i;:::-;5127:66;;5057:142;;;:::o;5205:75::-;5248:3;5269:5;5262:12;;5205:75;;;:::o;5286:269::-;5396:39;5427:7;5396:39;:::i;:::-;5457:91;5506:41;5530:16;5506:41;:::i;:::-;5498:6;5491:4;5485:11;5457:91;:::i;:::-;5451:4;5444:105;5362:193;5286:269;;;:::o;5561:73::-;5606:3;5627:1;5620:8;;5561:73;:::o;5640:189::-;5717:32;;:::i;:::-;5758:65;5816:6;5808;5802:4;5758:65;:::i;:::-;5693:136;5640:189;;:::o;5835:186::-;5895:120;5912:3;5905:5;5902:14;5895:120;;;5966:39;6003:1;5996:5;5966:39;:::i;:::-;5939:1;5932:5;5928:13;5919:22;;5895:120;;;5835:186;;:::o;6027:543::-;6128:2;6123:3;6120:11;6117:446;;;6162:38;6194:5;6162:38;:::i;:::-;6246:29;6264:10;6246:29;:::i;:::-;6236:8;6232:44;6429:2;6417:10;6414:18;6411:49;;;6450:8;6435:23;;6411:49;6473:80;6529:22;6547:3;6529:22;:::i;:::-;6519:8;6515:37;6502:11;6473:80;:::i;:::-;6132:431;;6117:446;6027:543;;;:::o;6576:117::-;6630:8;6680:5;6674:4;6670:16;6649:37;;6576:117;;;;:::o;6699:169::-;6743:6;6776:51;6824:1;6820:6;6812:5;6809:1;6805:13;6776:51;:::i;:::-;6772:56;6857:4;6851;6847:15;6837:25;;6750:118;6699:169;;;;:::o;6873:295::-;6949:4;7095:29;7120:3;7114:4;7095:29;:::i;:::-;7087:37;;7157:3;7154:1;7150:11;7144:4;7141:21;7133:29;;6873:295;;;;:::o;7173:1395::-;7290:37;7323:3;7290:37;:::i;:::-;7392:18;7384:6;7381:30;7378:56;;;7414:18;;:::i;:::-;7378:56;7458:38;7490:4;7484:11;7458:38;:::i;:::-;7543:67;7603:6;7595;7589:4;7543:67;:::i;:::-;7637:1;7661:4;7648:17;;7693:2;7685:6;7682:14;7710:1;7705:618;;;;8367:1;8384:6;8381:77;;;8433:9;8428:3;8424:19;8418:26;8409:35;;8381:77;8484:67;8544:6;8537:5;8484:67;:::i;:::-;8478:4;8471:81;8340:222;7675:887;;7705:618;7757:4;7753:9;7745:6;7741:22;7791:37;7823:4;7791:37;:::i;:::-;7850:1;7864:208;7878:7;7875:1;7872:14;7864:208;;;7957:9;7952:3;7948:19;7942:26;7934:6;7927:42;8008:1;8000:6;7996:14;7986:24;;8055:2;8044:9;8040:18;8027:31;;7901:4;7898:1;7894:12;7889:17;;7864:208;;;8100:6;8091:7;8088:19;8085:179;;;8158:9;8153:3;8149:19;8143:26;8201:48;8243:4;8235:6;8231:17;8220:9;8201:48;:::i;:::-;8193:6;8186:64;8108:156;8085:179;8310:1;8306;8298:6;8294:14;8290:22;8284:4;8277:36;7712:611;;;7675:887;;7265:1303;;;7173:1395;;:::o;8574:180::-;8622:77;8619:1;8612:88;8719:4;8716:1;8709:15;8743:4;8740:1;8733:15;8760:410;8800:7;8823:20;8841:1;8823:20;:::i;:::-;8818:25;;8857:20;8875:1;8857:20;:::i;:::-;8852:25;;8912:1;8909;8905:9;8934:30;8952:11;8934:30;:::i;:::-;8923:41;;9113:1;9104:7;9100:15;9097:1;9094:22;9074:1;9067:9;9047:83;9024:139;;9143:18;;:::i;:::-;9024:139;8808:362;8760:410;;;;:::o;9176:118::-;9263:24;9281:5;9263:24;:::i;:::-;9258:3;9251:37;9176:118;;:::o;9300:222::-;9393:4;9431:2;9420:9;9416:18;9408:26;;9444:71;9512:1;9501:9;9497:17;9488:6;9444:71;:::i;:::-;9300:222;;;;:::o;9528:126::-;9565:7;9605:42;9598:5;9594:54;9583:65;;9528:126;;;:::o;9660:96::-;9697:7;9726:24;9744:5;9726:24;:::i;:::-;9715:35;;9660:96;;;:::o;9762:118::-;9849:24;9867:5;9849:24;:::i;:::-;9844:3;9837:37;9762:118;;:::o;9886:222::-;9979:4;10017:2;10006:9;10002:18;9994:26;;10030:71;10098:1;10087:9;10083:17;10074:6;10030:71;:::i;:::-;9886:222;;;;:::o;10114:191::-;10154:3;10173:20;10191:1;10173:20;:::i;:::-;10168:25;;10207:20;10225:1;10207:20;:::i;:::-;10202:25;;10250:1;10247;10243:9;10236:16;;10271:3;10268:1;10265:10;10262:36;;;10278:18;;:::i;:::-;10262:36;10114:191;;;;:::o;10311:442::-;10460:4;10498:2;10487:9;10483:18;10475:26;;10511:71;10579:1;10568:9;10564:17;10555:6;10511:71;:::i;:::-;10592:72;10660:2;10649:9;10645:18;10636:6;10592:72;:::i;:::-;10674;10742:2;10731:9;10727:18;10718:6;10674:72;:::i;:::-;10311:442;;;;;;:::o;708:2880:21:-;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "708:2880:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;908:60:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2916:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3506:80:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3273:101:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2108:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;908:60:21:-;784:8;945:4;:23;;;;:::i;:::-;908:60;:::o;2916:197::-;1829:7;:19;1837:10;1829:19;;;;;;;;;;;;;;;;;;;;;;;;;1821:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;784:8:::1;945:4;:23;;;;:::i;:::-;3008:6;2992:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:35;2988:92;;;3050:19;;;;;;;;;;;;;;2988:92;3089:17;3095:2;3099:6;3089:5;:17::i;:::-;2916:197:::0;;:::o;3004:116:15:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;3506:80:21:-;3546:7;3572;;;;;;;;;;;3565:14;;3506:80;:::o;1981:93:15:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3273:101:21:-;3322:13;3354;3347:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3273:101;:::o;2108:161::-;1714:7;;;;;;;;;;;1700:21;;:10;:21;;;1696:70;;1744:11;;;;;;;;;;;;;;1696:70;2206:9:::1;2188:7;:15;2196:6;2188:15;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2244:6;2230:32;;;2252:9;2230:32;;;;;;:::i;:::-;;;;;;;;2108:161:::0;;:::o;3551:140:15:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:18:-;709:7;735:10;728:17;;656:96;:::o;8726:128:15:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:22:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:116::-;5503:21;5518:5;5503:21;:::i;:::-;5496:5;5493:32;5483:60;;5539:1;5536;5529:12;5483:60;5433:116;:::o;5555:133::-;5598:5;5636:6;5623:20;5614:29;;5652:30;5676:5;5652:30;:::i;:::-;5555:133;;;;:::o;5694:468::-;5759:6;5767;5816:2;5804:9;5795:7;5791:23;5787:32;5784:119;;;5822:79;;:::i;:::-;5784:119;5942:1;5967:53;6012:7;6003:6;5992:9;5988:22;5967:53;:::i;:::-;5957:63;;5913:117;6069:2;6095:50;6137:7;6128:6;6117:9;6113:22;6095:50;:::i;:::-;6085:60;;6040:115;5694:468;;;;;:::o;6168:474::-;6236:6;6244;6293:2;6281:9;6272:7;6268:23;6264:32;6261:119;;;6299:79;;:::i;:::-;6261:119;6419:1;6444:53;6489:7;6480:6;6469:9;6465:22;6444:53;:::i;:::-;6434:63;;6390:117;6546:2;6572:53;6617:7;6608:6;6597:9;6593:22;6572:53;:::i;:::-;6562:63;;6517:118;6168:474;;;;;:::o;6648:180::-;6696:77;6693:1;6686:88;6793:4;6790:1;6783:15;6817:4;6814:1;6807:15;6834:320;6878:6;6915:1;6909:4;6905:12;6895:22;;6962:1;6956:4;6952:12;6983:18;6973:81;;7039:4;7031:6;7027:17;7017:27;;6973:81;7101:2;7093:6;7090:14;7070:18;7067:38;7064:84;;7120:18;;:::i;:::-;7064:84;6885:269;6834:320;;;:::o;7160:180::-;7208:77;7205:1;7198:88;7305:4;7302:1;7295:15;7329:4;7326:1;7319:15;7346:410;7386:7;7409:20;7427:1;7409:20;:::i;:::-;7404:25;;7443:20;7461:1;7443:20;:::i;:::-;7438:25;;7498:1;7495;7491:9;7520:30;7538:11;7520:30;:::i;:::-;7509:41;;7699:1;7690:7;7686:15;7683:1;7680:22;7660:1;7653:9;7633:83;7610:139;;7729:18;;:::i;:::-;7610:139;7394:362;7346:410;;;;:::o;7762:172::-;7902:24;7898:1;7890:6;7886:14;7879:48;7762:172;:::o;7940:366::-;8082:3;8103:67;8167:2;8162:3;8103:67;:::i;:::-;8096:74;;8179:93;8268:3;8179:93;:::i;:::-;8297:2;8292:3;8288:12;8281:19;;7940:366;;;:::o;8312:419::-;8478:4;8516:2;8505:9;8501:18;8493:26;;8565:9;8559:4;8555:20;8551:1;8540:9;8536:17;8529:47;8593:131;8719:4;8593:131;:::i;:::-;8585:139;;8312:419;;;:::o;8737:191::-;8777:3;8796:20;8814:1;8796:20;:::i;:::-;8791:25;;8830:20;8848:1;8830:20;:::i;:::-;8825:25;;8873:1;8870;8866:9;8859:16;;8894:3;8891:1;8888:10;8885:36;;;8901:18;;:::i;:::-;8885:36;8737:191;;;;:::o;8934:442::-;9083:4;9121:2;9110:9;9106:18;9098:26;;9134:71;9202:1;9191:9;9187:17;9178:6;9134:71;:::i;:::-;9215:72;9283:2;9272:9;9268:18;9259:6;9215:72;:::i;:::-;9297;9365:2;9354:9;9350:18;9341:6;9297:72;:::i;:::-;8934:442;;;;;;:::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "MAX_SUPPLY()": "32cb6b0c",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "getMetadataUrl()": "b03e7592",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "setMinter(address,bool)": "cf456ae7",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataUrl\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSupplyExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InitialSupplyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"MinterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMetadataUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"https://github.com/dev-araujo\",\"details\":\"Utiliza a biblioteca OpenZeppelin para implementa\\u00e7\\u00e3o do padr\\u00e3o ERC20.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"initialSupply\":\"Quantidade inicial de tokens a serem cunhados.\",\"metadataUrl\":\"URL de metadados do token.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getMetadataUrl()\":{\"returns\":{\"_0\":\"A URL contendo informa\\u00e7\\u00f5es sobre o token (imagem, descri\\u00e7\\u00e3o, etc.).\"}},\"mint(address,uint256)\":{\"details\":\"Apenas minters podem mintar novos tokens.\",\"params\":{\"amount\":\"A quantidade de tokens a serem mintados.\",\"to\":\"O endere\\u00e7o que receber\\u00e1 os tokens.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"returns\":{\"_0\":\"O endere\\u00e7o do propriet\\u00e1rio.\"}},\"setMinter(address,bool)\":{\"params\":{\"isAllowed\":\"Booleano indicando se o endere\\u00e7o pode ou n\\u00e3o mintar.\",\"minter\":\"O endere\\u00e7o que poder\\u00e1 mintar tokens.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"GoHorse Token (GOHO)\",\"version\":1},\"userdoc\":{\"errors\":{\"MaxSupplyExceeded()\":[{\"notice\":\"Erro lan\\u00e7ado quando uma fun\\u00e7\\u00e3o restrita ao propriet\\u00e1rio \\u00e9 chamada por outro endere\\u00e7o.\"}],\"OnlyOwner()\":[{\"notice\":\"Erro lan\\u00e7ado quando a quantidade inicial de tokens excede o limite m\\u00e1ximo.\"}]},\"events\":{\"InitialSupplyMinted(address,uint256)\":{\"notice\":\"Evento emitido quando o suprimento inicial \\u00e9 mintado.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Construtor do contrato do token.\"},\"getMetadataUrl()\":{\"notice\":\"Obt\\u00e9m a URL de metadados do token.\"},\"mint(address,uint256)\":{\"notice\":\"Mintagem de novos tokens.\"},\"owner()\":{\"notice\":\"Retorna o endere\\u00e7o do propriet\\u00e1rio do contrato.\"},\"setMinter(address,bool)\":{\"notice\":\"Define um novo minter para o contrato.\"}},\"notice\":\"Implementa\\u00e7\\u00e3o de um token ERC20 para o projeto GoHorse.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GoHorseToken.sol\":\"GoHorse\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/GoHorseToken.sol\":{\"keccak256\":\"0x39e8be2023deb873ceaf69655fe16078397374022aacff86dc67495546c401b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79b8e8914513d5e03022c3dfc61513f69ff19765d2c7a008cec3dfc5516d02fa\",\"dweb:/ipfs/QmeJEPJwtrbCcDVE6AQuHzAHxUjjrMfPhzbZF5TBM5GZGq\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.28+commit.7893614a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "initialSupply",
                            "type": "uint256"
                        },
                        {
                            "internalType": "string",
                            "name": "metadataUrl",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "allowance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientAllowance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "balance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientBalance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "approver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidApprover"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidReceiver"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidSender"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidSpender"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidInitialSupply"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MaxSupplyExceeded"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "OnlyOwner"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "InitialSupplyMinted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "minter",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "status",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MinterUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MAX_SUPPLY",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allowance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "decimals",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getMetadataUrl",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mint"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "minter",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "isAllowed",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setMinter"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transfer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFrom",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "allowance(address,address)": {
                        "details": "See {IERC20-allowance}."
                    },
                    "approve(address,uint256)": {
                        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
                    },
                    "balanceOf(address)": {
                        "details": "See {IERC20-balanceOf}."
                    },
                    "constructor": {
                        "params": {
                            "initialSupply": "Quantidade inicial de tokens a serem cunhados.",
                            "metadataUrl": "URL de metadados do token."
                        }
                    },
                    "decimals()": {
                        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
                    },
                    "getMetadataUrl()": {
                        "returns": {
                            "_0": "A URL contendo informações sobre o token (imagem, descrição, etc.)."
                        }
                    },
                    "mint(address,uint256)": {
                        "details": "Apenas minters podem mintar novos tokens.",
                        "params": {
                            "amount": "A quantidade de tokens a serem mintados.",
                            "to": "O endereço que receberá os tokens."
                        }
                    },
                    "name()": {
                        "details": "Returns the name of the token."
                    },
                    "owner()": {
                        "returns": {
                            "_0": "O endereço do proprietário."
                        }
                    },
                    "setMinter(address,bool)": {
                        "params": {
                            "isAllowed": "Booleano indicando se o endereço pode ou não mintar.",
                            "minter": "O endereço que poderá mintar tokens."
                        }
                    },
                    "symbol()": {
                        "details": "Returns the symbol of the token, usually a shorter version of the name."
                    },
                    "totalSupply()": {
                        "details": "See {IERC20-totalSupply}."
                    },
                    "transfer(address,uint256)": {
                        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
                    },
                    "transferFrom(address,address,uint256)": {
                        "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "constructor": {
                        "notice": "Construtor do contrato do token."
                    },
                    "getMetadataUrl()": {
                        "notice": "Obtém a URL de metadados do token."
                    },
                    "mint(address,uint256)": {
                        "notice": "Mintagem de novos tokens."
                    },
                    "owner()": {
                        "notice": "Retorna o endereço do proprietário do contrato."
                    },
                    "setMinter(address,bool)": {
                        "notice": "Define um novo minter para o contrato."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/"
            ],
            "optimizer": {
                "enabled": false,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/GoHorseToken.sol": "GoHorse"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
                "urls": [
                    "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
                    "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
                "keccak256": "0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368",
                "urls": [
                    "bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171",
                    "dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
                "urls": [
                    "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
                    "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
                "urls": [
                    "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
                    "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
                "urls": [
                    "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
                    "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
                ],
                "license": "MIT"
            },
            "src/GoHorseToken.sol": {
                "keccak256": "0x39e8be2023deb873ceaf69655fe16078397374022aacff86dc67495546c401b6",
                "urls": [
                    "bzz-raw://79b8e8914513d5e03022c3dfc61513f69ff19765d2c7a008cec3dfc5516d02fa",
                    "dweb:/ipfs/QmeJEPJwtrbCcDVE6AQuHzAHxUjjrMfPhzbZF5TBM5GZGq"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 21
}